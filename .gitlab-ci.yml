stages:
  - init
  - rpmbuild
  - test
  - finish

.terraform:
  before_script:
    - schutzbot/ci_details.sh > ci-details-before-run
    - cat schutzbot/team_ssh_keys.txt | tee -a ~/.ssh/authorized_keys > /dev/null
  after_script:
    - schutzbot/ci_details.sh > ci-details-after-run
    - schutzbot/unregister.sh
  tags:
    - terraform
  artifacts:
    paths:
      - ci-details-before-run
      - ci-details-after-run

init:
  stage: init
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh start
  interruptible: true

RPM:
  stage: rpmbuild
  extends: .terraform
  script:
    - sh "schutzbot/mockbuild.sh"
  interruptible: true
  parallel:
    matrix:
      - RUNNER:
          - aws/fedora-39-x86_64
          - aws/fedora-39-aarch64
          - aws/fedora-40-x86_64
          - aws/fedora-40-aarch64
          - aws/fedora-41-x86_64
          - aws/fedora-41-aarch64
          - aws/centos-stream-9-x86_64
          - aws/centos-stream-9-aarch64
          - aws/centos-stream-10-x86_64
          - aws/centos-stream-10-aarch64
          - aws/rhel-8.10-ga-x86_64
          - aws/rhel-8.10-ga-aarch64
          - aws/rhel-9.4-ga-x86_64
          - aws/rhel-9.4-ga-aarch64
      - RUNNER:
          - aws/rhel-9.6-nightly-x86_64
          - aws/rhel-9.6-nightly-aarch64
          - aws/rhel-10.0-nightly-x86_64
          - aws/rhel-10.0-nightly-aarch64
        INTERNAL_NETWORK: "true"

OSTree Images:
  stage: test
  extends: .terraform
  script:
    - schutzbot/deploy.sh
    - sudo test/cases/ostree-images --manifest "$MANIFEST" --export $EXPORT
  variables:
    RUNNER: aws/fedora-39-x86_64
  parallel:
    matrix:
      - MANIFEST: fedora-ostree-tarball.json
        EXPORT: tarball/fedora-commit.tar
      - MANIFEST: fedora-ostree-container.json
        EXPORT: container/fedora-container.tar
      - MANIFEST: fedora-ostree-native-container.json
        EXPORT: container/ostree-container.tar
      - MANIFEST: fedora-ostree-bootiso.json
        EXPORT: bootiso/fedora-ostree-boot.iso
      - MANIFEST: fedora-ostree-bootiso-xz.json
        EXPORT: bootiso/fedora-ostree-boot.iso
      - MANIFEST: fedora-ostree-image.json
        EXPORT: qcow2/disk.qcow2
      - MANIFEST: fedora-coreos-container.json
        EXPORT: qemu/qemu.qcow2 metal/metal.raw metal4k/metal4k.raw

Manifests:
  stage: test
  extends: .terraform
  script:
    - schutzbot/deploy.sh
    - test/cases/manifest_tests.sh ${PARALLEL_EXEC}
  parallel:
    matrix:
      - PARALLEL_EXEC: ["1/8", "2/8", "3/8", "4/8", "5/8", "6/8", "7/8", "8/8"]
        RUNNER:
          - aws/fedora-39-x86_64
          - aws/fedora-39-aarch64
          - aws/centos-stream-9-x86_64
          - aws/centos-stream-9-aarch64
          - aws/centos-stream-10-x86_64
          - aws/centos-stream-10-aarch64
      - PARALLEL_EXEC: ["1/8", "2/8", "3/8", "4/8", "5/8", "6/8", "7/8", "8/8"]
        RUNNER:
          - aws/rhel-8.10-ga-x86_64
          - aws/rhel-8.10-ga-aarch64
          - aws/rhel-9.4-ga-x86_64
          - aws/rhel-9.4-ga-aarch64
          - aws/rhel-9.6-nightly-x86_64
          - aws/rhel-9.6-nightly-aarch64
          - aws/rhel-10.0-nightly-x86_64
          - aws/rhel-10.0-nightly-aarch64
        INTERNAL_NETWORK: "true"

finish:
  stage: finish
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh finish

fail:
  stage: finish
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh fail
    - exit 1  # make the pipeline fail so it doesn't look like success in gitlab
  when:
    on_failure
