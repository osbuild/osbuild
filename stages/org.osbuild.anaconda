#!/usr/bin/python3
"""
Configure basic aspects of the anaconda installer

Create an anaconda configuration file `90-osbuild.conf` in
the folder `/etc/anaconda/conf.d` to configure anaconda.

Currently only the list of enabled kickstart modules is
configurable via the `kickstart-modules` option.
"""

import os
import sys

import osbuild.api

SCHEMA = """
"additionalProperties": true,
"properties": {
  "kickstart-modules": {
    "type": "array",
    "description": "Kick start modules to enable",
    "items": {
      "type": "string"
    },
    "minItems": 1
  },
  "activatable-modules": {
    "type": "array",
    "description": "Kick start modules to activate",
    "items": {
      "type": "string"
    },
    "minItems": 1
  },
  "forbidden-modules": {
    "type": "array",
    "description": "Kick start modules to forbid",
    "items": {
      "type": "string"
    },
    "minItems": 1
  },
  "optional-modules": {
    "type": "array",
    "description": "Kick start modules to activate but are allowed to fail",
    "items": {
      "type": "string"
    },
    "minItems": 1
  }
}
"""

CONFIG = """
# osbuild customizations

[Anaconda]
"""


def main(tree, options):
    product_dir = os.path.join(tree, "etc/anaconda/conf.d")
    os.makedirs(product_dir, exist_ok=True)

    with open(
        os.path.join(product_dir, "90-osbuild.conf"), "w", encoding="utf8"
    ) as f:
        f.write(CONFIG)

        for grouping in options:
            f.write(grouping.replace("-", "_") + "=\n")
            for m in options[grouping]:
                f.write(f"    {m}\n")


if __name__ == "__main__":
    stage_args = osbuild.api.arguments()
    r = main(stage_args["tree"], stage_args["options"])
    sys.exit(r)
