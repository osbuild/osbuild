#!/usr/bin/python3
"""
Add kernel command line parameters to a BLS [1] config either in
the tree or in a mount.

[1] https://freedesktop.org/wiki/Specifications/BootLoaderSpec/
"""


import sys
from urllib.parse import urlparse

import osbuild.api
from osbuild.util import bls

SCHEMA_2 = r"""
"options": {
  "additionalProperties": false,
  "required": ["kernel_opts"],
  "properties": {
    "kernel_opts": {
      "description": "Additional kernel command line options",
      "type": "array",
      "items": {
        "description": "A single kernel command line option",
        "type": "string"
      }
    },
    "bootpath": {
      "type": "string",
      "description": "The mounted location of the boot filesystem tree where the BLS entries will be under ./loader/entries/*.conf",
      "pattern": "^(mount|tree):\/\/\/",
      "examples": ["tree:///boot", "mount:///", "mount:///boot"],
      "default": "tree:///boot"
    }
  }
},
"devices": {
  "type": "object",
  "additionalProperties": true
},
"mounts": {
  "type": "array"
}
"""


def main(paths, tree, options):
    kopts = options.get("kernel_opts", [])
    bootpath = options.get("bootpath", "tree:///boot")

    url = urlparse(bootpath)
    scheme = url.scheme
    if scheme == "tree":
        root = tree
    elif scheme == "mount":
        root = paths["mounts"]
    else:
        raise ValueError(f"Unsupported scheme '{scheme}'")

    assert url.path.startswith("/")
    bootroot = root + url.path
    bls.options_append(bootroot, kopts)


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["paths"], args["tree"], args["options"])
    sys.exit(r)
