#!/usr/bin/python3
import os
import sys

import osbuild.api
from osbuild.util import ostree


def main(tree, options):
    repo = options["repo"]
    remotes = options.get("remotes", [])

    target = os.path.join(tree, repo.lstrip("/"))

    for remote in remotes:
        name = remote["name"]
        url = remote["url"]
        branches = remote.get("branches", [])
        gpgkeys = remote.get("gpgkeys", [])
        gpgkeypaths = remote.get("gpgkeypaths", [])
        contenturl = remote.get("contenturl")

        extra_args = []
        if gpgkeypaths:
            paths = ",".join(gpgkeypaths)
            extra_args.append(f"--set=gpgkeypath={paths}")
            extra_args.append("--set=gpg-verify=true")
        elif not gpgkeys:
            extra_args += ["--no-gpg-verify"]

        if contenturl:
            extra_args.append(f"--set=contenturl={contenturl}")

        ostree.cli("remote", "add",
                   "--if-not-exists",
                   *extra_args,
                   name, url,
                   *branches,
                   repo=target)

        for key in gpgkeys:
            ostree.cli("remote", "gpg-import", "--stdin", name,
                       repo=target,
                       _input=key)


if __name__ == '__main__':
    stage_args = osbuild.api.arguments()
    r = main(stage_args["tree"],
             stage_args["options"])
    sys.exit(r)
