#!/usr/bin/python3
"""
Change DNF configuration.

The stage changes persistent DNF configuration on the filesystem. Currently,
only DNF variables can be defined.
"""


import sys

import osbuild.api


SCHEMA = r"""
"definitions": {
  "variable": {
    "type": "object",
    "additionalProperties": false,
    "required": ["name", "value"],
    "description": "DNF variable to configure persistently.",
    "properties": {
      "name": {
        "type": "string",
        "pattern": "^[a-z0-9_]+$",
        "description": "Name of the variable."
      },
      "value": {
        "type": "string",
        "description": "Value of the variable."
      }
    }
  }
},
"additionalProperties": false,
"description": "DNF configuration.",
"properties": {
  "variables": {
    "type": "array",
    "description": "DNF variables to configure persistently.",
    "items": {
        "$ref": "#/definitions/variable"
    }
  }
}
"""


def configure_variable(tree, name, value):
    """
    Creates a persistent DNF configuration for the given variable name and
    value.

    From DNF.CONF(5):
    Filenames may contain only alphanumeric characters and underscores and be
    in lowercase.
    """
    vars_directory = "/etc/dnf/vars"

    with open(f"{tree}{vars_directory}/{name}", "w") as f:
        f.write(value + "\n")


def main(tree, options):
    variables = options.get("variables", [])

    for variable in variables:
        configure_variable(tree, variable["name"], variable["value"])

    return 0


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["tree"], args["options"])
    sys.exit(r)
