#!/usr/bin/python3
import configparser
import os
import sys

import osbuild.api


USR_PATH = "usr/lib/NetworkManager/system-connections"


def main(tree, options):
    settings = options["settings"]
    cfgfile = options.get("path")

    if not cfgfile:
        filename = options["filename"]
        cfgfile = os.path.join(USR_PATH, filename)

    cfgfile = os.path.join(tree, cfgfile.lstrip("/"))
    cfgdir = os.path.dirname(cfgfile)
    os.makedirs(cfgdir, exist_ok=True)

    config = configparser.ConfigParser()
    # prevent conversion of the option name to lowercase
    config.optionxform = lambda option: option

    for name, values in settings.items():

        if not config.has_section(name):
            config.add_section(name)

        for option, value in values.items():
            if isinstance(value, list):
                val = ",".join(value)
            elif isinstance(value, bool):
                val = "true" if value else "false"
            else:
                val = str(value)
            config.set(name, option, val)

    with open(cfgfile, "w", encoding="utf8") as f:
        # need restrictive permissions
        os.fchmod(f.fileno(), 0o600)
        config.write(f, space_around_delimiters=False)

    return 0


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["tree"], args["options"])
    sys.exit(r)
