#!/usr/bin/python3
import os
import sys

import iniparse

import osbuild.api


def option_value_to_str(value):
    """
    Convert allowed types of option values to string.

    The instance_configs.cfg allows comma seperated string lists as an option value.
    """
    if isinstance(value, list):
        value = ", ".join(value)
    elif isinstance(value, bool):
        value = "true" if value else "false"
    elif not isinstance(value, str):
        value = str(value)
    return value


def make_section(cfg, name, settings):
    if not cfg.has_section(name):
        cfg.add_section(name)

    for key, value in settings.items():
        val = option_value_to_str(value)
        cfg.set(name, key, val)


def main(tree, options):
    scope = options.get("config_scope")
    config = options.get("config")

    instance_config_dir = f"{tree}/etc/default"
    os.makedirs(instance_config_dir, exist_ok=True)

    if scope == "distro":
        filepath = instance_config_dir + "/instance_configs.cfg.distro"
    else:
        filepath = instance_config_dir + "/instance_configs.cfg"

    parser = iniparse.SafeConfigParser()

    try:
        with open(filepath, "r", encoding="utf8") as f:
            parser.readfp(f)
    except FileNotFoundError:
        print(f"Creating new guest-agent configuration file at '{filepath}'.")
        os.makedirs(instance_config_dir, exist_ok=True)

    for section_id, section_content in config.items():
        make_section(parser, section_id, section_content)

    with open(filepath, "w", encoding="utf8") as f:
        parser.write(f)

    return 0


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["tree"], args["options"])
    sys.exit(r)
