#!/usr/bin/python3
"""
Change YUM configuration.

The stage changes persistent YUM configuration on the filesystem.
"""

import sys
import iniparse

import osbuild.api


SCHEMA = r"""
"additionalProperties": false,
"description": "YUM configuration.",
"properties": {
  "config": {
    "type": "object",
    "additionalProperties": false,
    "description": "YUM global configuration.",
    "properties": {
      "http_caching": {
        "type": "string",
        "enum": ["all", "packages", "lazy:packages", "none"],
        "description": "Determines how upstream HTTP caches are instructed to handle any HTTP downloads that YUM does."
      }
    }
  }
}
"""


def main(tree, options):
    config_options = options.get("config")
    yum_config_path = f"{tree}/etc/yum.conf"
    yum_config = iniparse.SafeConfigParser()

    if config_options:
        try:
            with open(yum_config_path, "r") as f:
                yum_config.readfp(f)
        except FileNotFoundError:
            print(f"Warning: YUM configuration file '{yum_config_path}' does not exist, will create it.")

        # only global options from the [main] section are supported
        if not yum_config.has_section("main"):
            yum_config.add_section("main")

        for option, value in config_options.items():
            yum_config.set("main", option, value)

        with open(yum_config_path, "w") as f:
            yum_config.write(f)

    return 0


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["tree"], args["options"])
    sys.exit(r)
