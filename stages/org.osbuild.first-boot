#!/usr/bin/python3
import os
import sys

import osbuild.api


def add_first_boot(tree, commands, wait_for_network):
    if wait_for_network:
        network = """Wants=network-online.target
After=network-online.target"""
    else:
        network = ""

    execs = "\n"
    for command in commands:
        execs += f"ExecStart={command}\n"  # pylint: disable=consider-using-join

    service = f"""[Unit]
Description=OSBuild First Boot Service
ConditionPathExists=/etc/osbuild-first-boot
{network}

[Service]
Type=oneshot
{execs}"""

    os.makedirs(f"{tree}/usr/lib/systemd/system/default.target.wants", exist_ok=True)
    with open(f"{tree}/usr/lib/systemd/system/osbuild-first-boot.service", "w", encoding="utf8") as f:
        f.write(service)
    os.symlink("../osbuild-first-boot.service",
               f"{tree}/usr/lib/systemd/system/default.target.wants/osbuild-first-boot.service")

    os.makedirs(f"{tree}/etc", exist_ok=True)
    open(f"{tree}/etc/osbuild-first-boot", 'a', encoding="utf8").close()


def main(tree, options):
    commands = options["commands"]
    wait_for_network = options.get("wait_for_network", False)

    commands = ["/usr/bin/rm /etc/osbuild-first-boot"] + commands

    add_first_boot(tree, commands, wait_for_network)

    return 0


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["tree"], args["options"])
    sys.exit(r)
