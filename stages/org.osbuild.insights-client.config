#!/usr/bin/python3

import os
import sys

import osbuild.api


def main(tree, options):
    insights_client_config = options.get("config", {})
    proxy = insights_client_config.get("proxy")
    path = options.get("path", "/etc/insights-client/insights-client.conf")
    path = os.path.join(tree, path.lstrip("/"))

    changes = {}
    if proxy is not None:
        changes["proxy"] = {"key": "proxy", "value": proxy}

    if not os.path.exists(path):
        with open(path, 'w', encoding="utf8"):
            pass

    # For each of the configured options, find the first non-commented out instance
    # of the option and replace it (if necessary). If it does not already exist, append
    # the option to the end of the file.
    # Keys are case insensitive, values are not. Try to preserve the key and default to
    # camel-case.
    with open(path, 'r', encoding='utf8') as f:
        lines = f.readlines()

    with open(path, 'w', encoding='utf8') as f:
        for line in lines:
            line_list = line.split('=')
            if len(line_list) == 2:
                key, current_value = line_list
                entry = changes.pop(key, None)
                if entry is not None and current_value != entry['value']:
                    f.write(f"{key}={entry['value']}\n")
                    continue
            f.write(line)
        for entry in changes.values():
            f.write(f"{entry['key']}={entry['value']}\n")

    return 0


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["tree"], args["options"])
    sys.exit(r)
