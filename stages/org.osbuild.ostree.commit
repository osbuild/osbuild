#!/usr/bin/python3
import json
import os
import subprocess
import sys
import tempfile

from osbuild import api
from osbuild.util import ostree


def main(inputs, output_dir, options, meta):
    tree = inputs["tree"]["path"]
    selinux_label_version = options.get("selinux-label-version", 0)

    ref = options["ref"]
    os_version = options.get("os_version", None)
    parent = options.get("parent", None)

    # rpm-ostree compose commit wants to consume the commit
    # so for now, we copy the whole tree and let it have its
    # way
    with tempfile.TemporaryDirectory(dir=output_dir) as root:
        subprocess.run(["cp", "--reflink=auto", "-a",
                        f"{tree}/.", root],
                       check=True)

        repo = os.path.join(output_dir, "repo")

        treefile = ostree.Treefile()
        treefile["ref"] = ref
        if selinux_label_version != 0:
            # Don't set if 0 (default), to support older rpm-ostree versions
            treefile["selinux-label-version"] = selinux_label_version

        argv = ["rpm-ostree", "compose", "commit"]
        argv += [f"--repo={repo}"]

        if parent:
            argv += [f"--parent={parent}"]

        if os_version:
            argv += [
                f"--add-metadata-string=version={os_version}",
            ]

        argv += [
            f"--add-metadata-string=rpmostree.inputhash={meta['id']}",
            f"--write-composejson-to={output_dir}/compose.json"
        ]

        with treefile.as_tmp_file() as path:
            argv += [path, root]

            subprocess.run(argv,
                           stdout=sys.stderr,
                           check=True)

        with open(os.path.join(output_dir, "compose.json"), "r", encoding="utf8") as f:
            compose = json.load(f)

        api.metadata({"compose": compose})


if __name__ == '__main__':
    args = api.arguments()

    r = main(args["inputs"],
             args["tree"],
             args["options"],
             args["meta"])

    sys.exit(r)
