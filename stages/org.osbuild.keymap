#!/usr/bin/python3
import os
import subprocess
import sys

import osbuild.api


# We can not use 'localectl', because it required 'systemd-localed' accessible
# over DBus.
# We can not use 'setxkbmap', because it can not be used on a different
# filesystem tree. If run in chroot, it would have to be installed on the
# image.
def configure_xkb(tree, xkb_options):
    layouts = ",".join(xkb_options["layouts"])

    file_content = f"""# Created by osbuild. Do not edit manually, use localectl(1).
Section "InputClass"
        Identifier "system-keyboard"
        MatchIsKeyboard "on"
        Option "XkbLayout" "{layouts}"
EndSection
"""

    os.makedirs(f"{tree}/etc/X11/xorg.conf.d", mode=0o755, exist_ok=True)
    with open(f"{tree}/etc/X11/xorg.conf.d/00-keyboard.conf", "w", encoding="utf8") as f:
        f.write(file_content)


def configure_vconsole(tree, vconsole_keymap, font):
    # We need to remove the /etc/vconsole.conf file first, because it is created while we install RPM packages.
    # systemd-firstboot expects that if /etc/vconsole.conf exists it is a user-defined value and does not change it, but
    # the assumption is wrong, because it contains a default value from RPM package.

    vconsole = os.path.join(tree, "etc", "vconsole.conf")
    try:
        os.remove(vconsole)
        print("/etc/vconsole.conf already exists. Replacing.")
    except FileNotFoundError:
        pass

    subprocess.run(["systemd-firstboot", f"--root={tree}", f"--keymap={vconsole_keymap}"], check=True)

    if font:
        with open(vconsole, "a", encoding="utf-8") as f:
            f.write(f"FONT={font}\n")


def main(tree, options):
    keymap = options["keymap"]
    x11_keymap = options.get("x11-keymap", {})
    font = options.get("font", "")

    configure_vconsole(tree, keymap, font)
    if x11_keymap:
        configure_xkb(tree, x11_keymap)

    return 0


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["tree"], args["options"])
    sys.exit(r)
