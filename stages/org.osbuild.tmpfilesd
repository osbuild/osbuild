#!/usr/bin/python3
import sys

import osbuild.api


def main(tree, options):
    filename = options["filename"]
    cfg = options["config"]

    tmpfilesd_config_dir = f"{tree}/usr/lib/tmpfiles.d"

    cfg_lines = []
    for cfg_item in cfg:
        cfg_type = cfg_item["type"]
        cfg_path = cfg_item["path"]

        cfg_line = f"{cfg_type} {cfg_path}"

        optional_properties = ["mode", "user", "group", "age", "argument"]
        cfg_line_optional_part = ""
        for optional_property in reversed(optional_properties):
            cfg_property_value = cfg_item.get(optional_property)
            if cfg_property_value:
                if cfg_line_optional_part:
                    cfg_line_optional_part = " ".join([cfg_property_value, cfg_line_optional_part])
                else:
                    cfg_line_optional_part = cfg_property_value
            elif cfg_line_optional_part:
                # if there were already some optional properties provided, then
                # we must use "-" for any not provided optional values preceding
                # them on the configuration line.
                cfg_line_optional_part = " ".join(["-", cfg_line_optional_part])

        if cfg_line_optional_part:
            cfg_line += " " + cfg_line_optional_part
        cfg_line += "\n"
        cfg_lines.append(cfg_line)

    with open(f"{tmpfilesd_config_dir}/{filename}", "w", encoding="utf8") as f:
        f.writelines(cfg_lines)

    return 0


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["tree"], args["options"])
    sys.exit(r)
