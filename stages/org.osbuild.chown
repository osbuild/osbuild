#!/usr/bin/python3
"""
Change file owner and group
Change the file user and/or group ownership of one or more files or directories inside the tree.

Notes:
  - Requires 'chroot' in the buildroot.
  - Runs the 'chown' binary from the image in the chroot.
"""

import subprocess
import sys

import osbuild.api

SCHEMA_2 = r"""
"options": {
  "additionalProperties": false,
  "properties": {
    "items": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^\\/(?!\\.\\.)((?!\\/\\.\\.\\/).)+$": {
          "type": "object",
          "anyOf": [
            {"required" : ["user"]},
            {"required" : ["group"]}
          ],
          "properties": {
            "user": {
              "oneOf": [
                {
                    "type": "string",
                    "pattern": "^[A-Za-z0-9_.][A-Za-z0-9_.-]{0,31}$"
                },
                {
                    "type": "number",
                    "minimum": 0
                }
              ],
              "description": "User name or UID"
            },
            "group": {
              "oneOf": [
                {
                    "type": "string",
                    "pattern": "^[A-Za-z0-9_][A-Za-z0-9_-]{0,31}$"
                },
                {
                    "type": "number",
                    "minimum": 0
                }
              ],
              "description": "Group name or GID"
            },
            "recursive": {
              "type": "boolean",
              "default": false,
              "description": "Change ownership recursively"
            }
          }
        }
      }
    }
  }
}
"""


def main(tree, options):
    for path, cmdargs in options["items"].items():
        user = str(cmdargs.get("user", ""))
        group = str(cmdargs.get("group", ""))
        recursive = cmdargs.get("recursive", False)

        # Make sure to remove the semicolon if no group is given
        arguments = [f"{user}:{group}".rstrip(":")]

        if recursive:
            arguments.append("--recursive")

        arguments.append("--")
        arguments.append(path)

        # run the chown command in the chroot to ensure that it can
        # set user and group that exist in the tree
        cmd = [
            "/usr/sbin/chroot", tree,
            "chown", *arguments
        ]

        subprocess.run(cmd, check=True)

    return 0


if __name__ == "__main__":
    args = osbuild.api.arguments()
    sys.exit(main(args["tree"], args["options"]))
