#!/usr/bin/python3
import os
import subprocess
import sys

import osbuild.api


def main(tree, options):
    enabled_services = options.get("enabled_services", [])
    disabled_services = options.get("disabled_services", [])
    masked_services = options.get("masked_services", [])
    masked_generators = options.get("masked_generators", [])
    default_target = options.get("default_target")

    for service in enabled_services:
        subprocess.run(["systemctl", "--root", tree, "enable", "--", service], check=True)

    for service in disabled_services:
        subprocess.run(["systemctl", "--root", tree, "disable", "--", service], check=True)

    for service in masked_services:
        subprocess.run(["systemctl", "--root", tree, "mask", "--", service], check=True)

    if masked_generators:
        # systemctl can't mask generators, so manually create the mask
        generator_dir = f"{tree}/etc/systemd/system-generators"
        os.makedirs(generator_dir, exist_ok=True)
        for generator in masked_generators:
            target = os.path.join(generator_dir, generator)
            os.symlink("/dev/null", target)

    if default_target:
        subprocess.run(["systemctl", "--root", tree, "set-default", default_target], check=True)

    return 0


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["tree"], args["options"])
    sys.exit(r)
