#!/usr/libexec/platform-python

import os
import subprocess
import sys
from osbuild.util import jsoncomm


def ldconfig():
    # ld.so.conf must exist, or `ldconfig` throws a warning
    subprocess.run(["touch", "/etc/ld.so.conf"], check=True)
    subprocess.run(["ldconfig"], check=True)


def sysusers():
    try:
        subprocess.run(["systemd-sysusers"], stdout=subprocess.PIPE, stderr=subprocess.STDOUT, check=True)
    except subprocess.CalledProcessError as error:
        sys.stderr.write(error.stdout)
        sys.exit(1)


def tmpfiles():
    # Allow systemd-tmpfiles to return non-0. Some packages want to create
    # directories owned by users that are not set up with systemd-sysusers.
    subprocess.run(["systemd-tmpfiles", "--create"], check=False)


def nsswitch():
    # the default behavior is fine, but using nss-resolve does not
    # necessarily work in a non-booted container, so make sure that
    # is not configured.
    try:
        os.remove("/etc/nsswitch.conf")
    except FileNotFoundError:
        pass


def setup_stdio():
    with jsoncomm.Socket.new_client("/run/osbuild/api/osbuild") as client:
        req = {'method': 'setup-stdio'}
        client.send(req)
        msg, fds, _ = client.recv()
        for io in ['stdin', 'stdout', 'stderr']:
            target = getattr(sys, io)
            source = fds[msg[io]]
            os.dup2(source, target.fileno())
        fds.close()


def python_alternatives():
    """/usr/bin/python3 is a symlink to /etc/alternatives/python3, which points
    to /usr/bin/python3.6 by default. Recreate the link in /etc, so that
    shebang lines in stages and assemblers work.
    """
    os.makedirs("/etc/alternatives", exist_ok=True)
    try:
        os.symlink("/usr/bin/python3.6", "/etc/alternatives/python3")
    except FileExistsError:
        pass

if __name__ == "__main__":
    setup_stdio()
    ldconfig()
    sysusers()
    tmpfiles()
    nsswitch()
    python_alternatives()

    r = subprocess.run(sys.argv[1:], check=False)
    sys.exit(r.returncode)
